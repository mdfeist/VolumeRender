const float blurSize = 1.f/2048.f;

float4 cubic(float x)
{
    float x2 = x * x;
    float x3 = x2 * x;
    float4 w;
    w.x =   -x3 + 3*x2 - 3*x + 1;
    w.y =  3*x3 - 6*x2       + 4;
    w.z = -3*x3 + 3*x2 + 3*x + 1;
    w.w =  x3;
    return w / 6.f;
}

float4 bi_cubic(uniform sampler2D texture, float2 texcoord, float2 texscale)
{
    float fx = fract(texcoord.x);
    float fy = fract(texcoord.y);
    texcoord.x -= fx;
    texcoord.y -= fy;

    float4 xcubic = cubic(fx);
    float4 ycubic = cubic(fy);

    float4 c = float4(texcoord.x - 0.5, texcoord.x + 1.5, texcoord.y - 0.5, texcoord.y + 1.5);
    float4 s = float4(xcubic.x + xcubic.y, xcubic.z + xcubic.w, ycubic.x + ycubic.y, ycubic.z + ycubic.w);
    float4 offset = c + float4(xcubic.y, xcubic.w, ycubic.y, ycubic.w) / s;

    float4 sample0 = tex2D(texture, float2(offset.x, offset.z) * texscale);
    float4 sample1 = tex2D(texture, float2(offset.y, offset.z) * texscale);
    float4 sample2 = tex2D(texture, float2(offset.x, offset.w) * texscale);
    float4 sample3 = tex2D(texture, float2(offset.y, offset.w) * texscale);

    float sx = s.x / (s.x + s.y);
    float sy = s.z / (s.z + s.w);

    return mix(
        mix(sample3, sample2, sx),
        mix(sample1, sample0, sx), sy);
}

void main(float2  texCoord : TEXCOORD0,
	  uniform sampler2D texData,
	  out float4 color0 : COLOR0)
{	
	const float2 offset1 = float2(-blurSize, 0);
	const float2 offset2 = float2(0, blurSize);
	const float2 offset3 = float2(blurSize, -blurSize);
	const float2 offset4 = float2(-blurSize, blurSize);

	float4 color = (tex2D(texData, texCoord + offset1) + 
		tex2D(texData, texCoord + offset2) +
		tex2D(texData, texCoord + offset3) +
		tex2D(texData, texCoord + offset4)) / 4.f;

	color0 = 0.5*tex2D(texData, texCoord) + 0.5*color;
}	